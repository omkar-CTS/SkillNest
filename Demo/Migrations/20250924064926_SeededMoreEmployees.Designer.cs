// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SkillNest.Data;

#nullable disable

namespace SkillNest.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250924064926_SeededMoreEmployees")]
    partial class SeededMoreEmployees
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SkillNest.Models.Certificates", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CertificateFilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CertificateNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("DateObtained")
                        .HasColumnType("date");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("ExpiryDate")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Certificates");
                });

            modelBuilder.Entity("SkillNest.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "omkar@gmail.com",
                            Location = "Hyderabad",
                            Name = "Omkar Bajaga",
                            Password = "Omkar@123",
                            PasswordHash = new byte[0],
                            PasswordSalt = new byte[0],
                            Role = "Employee"
                        },
                        new
                        {
                            Id = 2,
                            Email = "rahul@gmail.com",
                            Location = "Pune",
                            Name = "Rahul",
                            Password = "Rahul@123",
                            PasswordHash = new byte[0],
                            PasswordSalt = new byte[0],
                            Role = "Manager"
                        },
                        new
                        {
                            Id = 3,
                            Email = "amit.sharma@gmail.com",
                            Location = "Delhi",
                            Name = "Amit Sharma",
                            Password = "Amit@123",
                            PasswordHash = new byte[0],
                            PasswordSalt = new byte[0],
                            Role = "Employee"
                        },
                        new
                        {
                            Id = 4,
                            Email = "suresh.kumar@gmail.com",
                            Location = "Mumbai",
                            Name = "Suresh Kumar",
                            Password = "Suresh@123",
                            PasswordHash = new byte[0],
                            PasswordSalt = new byte[0],
                            Role = "Employee"
                        },
                        new
                        {
                            Id = 5,
                            Email = "priya.singh@gmail.com",
                            Location = "Bangalore",
                            Name = "Priya Singh",
                            Password = "Priya@123",
                            PasswordHash = new byte[0],
                            PasswordSalt = new byte[0],
                            Role = "Manager"
                        },
                        new
                        {
                            Id = 6,
                            Email = "deepak.verma@gmail.com",
                            Location = "Kolkata",
                            Name = "Deepak Verma",
                            Password = "Deepak@123",
                            PasswordHash = new byte[0],
                            PasswordSalt = new byte[0],
                            Role = "Employee"
                        },
                        new
                        {
                            Id = 7,
                            Email = "neha.gupta@gmail.com",
                            Location = "Jaipur",
                            Name = "Neha Gupta",
                            Password = "Neha@123",
                            PasswordHash = new byte[0],
                            PasswordSalt = new byte[0],
                            Role = "Employee"
                        },
                        new
                        {
                            Id = 8,
                            Email = "rakesh.yadav@gmail.com",
                            Location = "Chennai",
                            Name = "Rakesh Yadav",
                            Password = "Rakesh@123",
                            PasswordHash = new byte[0],
                            PasswordSalt = new byte[0],
                            Role = "Employee"
                        },
                        new
                        {
                            Id = 9,
                            Email = "anjali.mishra@gmail.com",
                            Location = "Ahmedabad",
                            Name = "Anjali Mishra",
                            Password = "Anjali@123",
                            PasswordHash = new byte[0],
                            PasswordSalt = new byte[0],
                            Role = "Manager"
                        },
                        new
                        {
                            Id = 10,
                            Email = "vikas.jain@gmail.com",
                            Location = "Lucknow",
                            Name = "Vikas Jain",
                            Password = "Vikas@123",
                            PasswordHash = new byte[0],
                            PasswordSalt = new byte[0],
                            Role = "Employee"
                        },
                        new
                        {
                            Id = 11,
                            Email = "sunita.rani@gmail.com",
                            Location = "Chandigarh",
                            Name = "Sunita Rani",
                            Password = "Sunita@123",
                            PasswordHash = new byte[0],
                            PasswordSalt = new byte[0],
                            Role = "Employee"
                        },
                        new
                        {
                            Id = 12,
                            Email = "rohan.mehta@gmail.com",
                            Location = "Indore",
                            Name = "Rohan Mehta",
                            Password = "Rohan@123",
                            PasswordHash = new byte[0],
                            PasswordSalt = new byte[0],
                            Role = "Manager"
                        },
                        new
                        {
                            Id = 13,
                            Email = "kiran.patel@gmail.com",
                            Location = "Surat",
                            Name = "Kiran Patel",
                            Password = "Kiran@123",
                            PasswordHash = new byte[0],
                            PasswordSalt = new byte[0],
                            Role = "Employee"
                        },
                        new
                        {
                            Id = 14,
                            Email = "pooja.joshi@gmail.com",
                            Location = "Bhopal",
                            Name = "Pooja Joshi",
                            Password = "Pooja@123",
                            PasswordHash = new byte[0],
                            PasswordSalt = new byte[0],
                            Role = "Employee"
                        },
                        new
                        {
                            Id = 15,
                            Email = "arun.dubey@gmail.com",
                            Location = "Kanpur",
                            Name = "Arun Dubey",
                            Password = "Arun@123",
                            PasswordHash = new byte[0],
                            PasswordSalt = new byte[0],
                            Role = "Manager"
                        },
                        new
                        {
                            Id = 16,
                            Email = "sneha.choudhary@gmail.com",
                            Location = "Nagpur",
                            Name = "Sneha Choudhary",
                            Password = "Sneha@123",
                            PasswordHash = new byte[0],
                            PasswordSalt = new byte[0],
                            Role = "Employee"
                        },
                        new
                        {
                            Id = 17,
                            Email = "tarun.kapoor@gmail.com",
                            Location = "Patna",
                            Name = "Tarun Kapoor",
                            Password = "Tarun@123",
                            PasswordHash = new byte[0],
                            PasswordSalt = new byte[0],
                            Role = "Employee"
                        },
                        new
                        {
                            Id = 18,
                            Email = "ankita.sinha@gmail.com",
                            Location = "Agra",
                            Name = "Ankita Sinha",
                            Password = "Ankita@123",
                            PasswordHash = new byte[0],
                            PasswordSalt = new byte[0],
                            Role = "Manager"
                        },
                        new
                        {
                            Id = 19,
                            Email = "nitin.saxena@gmail.com",
                            Location = "Varanasi",
                            Name = "Nitin Saxena",
                            Password = "Nitin@123",
                            PasswordHash = new byte[0],
                            PasswordSalt = new byte[0],
                            Role = "Employee"
                        },
                        new
                        {
                            Id = 20,
                            Email = "meena.pandey@gmail.com",
                            Location = "Ranchi",
                            Name = "Meena Pandey",
                            Password = "Meena@123",
                            PasswordHash = new byte[0],
                            PasswordSalt = new byte[0],
                            Role = "Employee"
                        });
                });

            modelBuilder.Entity("SkillNest.Models.Projects", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("SkillNest.Models.Resume", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("Resumes");
                });

            modelBuilder.Entity("SkillNest.Models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Proficiency")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("SkillNest.Models.Certificates", b =>
                {
                    b.HasOne("SkillNest.Models.Employee", "Employee")
                        .WithMany("Certificates")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("SkillNest.Models.Projects", b =>
                {
                    b.HasOne("SkillNest.Models.Employee", "Employee")
                        .WithMany("Projects")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("SkillNest.Models.Resume", b =>
                {
                    b.HasOne("SkillNest.Models.Employee", "Employee")
                        .WithOne("Resume")
                        .HasForeignKey("SkillNest.Models.Resume", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("SkillNest.Models.Skill", b =>
                {
                    b.HasOne("SkillNest.Models.Employee", "Employee")
                        .WithMany("Skills")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("SkillNest.Models.Employee", b =>
                {
                    b.Navigation("Certificates");

                    b.Navigation("Projects");

                    b.Navigation("Resume");

                    b.Navigation("Skills");
                });
#pragma warning restore 612, 618
        }
    }
}
